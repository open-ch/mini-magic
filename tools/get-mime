#!/usr/bin/perl
###############################################################################
#
# get-mime: CLI-tool that retrieves the MIME types at default and company scope
#
# Copyright (c) 2021 Open Systems AG, Switzerland
# All Rights Reserved.
#
# This CLI-tool retrieves all MIME types used to configured Avira ICAP daemon.
# The MIME types are located at:
# - avira/avira-icap.conf
# - avira/avira-icap-waf.conf
# - avira/avira-icap.conf.override
# - squid/antimalware/policy
# - squid/antimalware/mediatypefilter/policy.<GROUP>
#
# Can use the following one-liner to get the count of MIME types per company
# for d in /vault/current/company/*; do id=$(echo "$d" | rev | cut -d '/' -f-1 | rev); echo -n "$id -> ";  ./get-mime $id | wc -l ; done
#
###############################################################################
use v5.28;
use warnings;

use Const::Fast;

const my $VAULT_PATH => "/vault/current";

# from_config retrieves the MIME types from the config files, i.e., avira/avira-icap.conf, avira/avira-icap-waf.conf and "avira/avira-icap.conf.override.
# It splits the result into the SkipMediaStreams and the remaining MIME types.
# It takes as argument the scope.
# It returns an hash containing the MIME types as key and 0/1 as value, respectively for SkipMediaStreams and other MIME types.
sub from_config {
	my $scope = shift;
	my @files = ("avira/avira-icap.conf", "avira/avira-icap-waf.conf", "avira/avira-icap.conf.override");
	my %mime_types;

	for my $file(@files){
		
		my $file_name = "$VAULT_PATH/$scope/$file";
		next if(! -f $file_name );
		my $fh; open($fh, "<", $file_name) or die $!;

		while(my $line = <$fh>){
			# removes comments
			next if($line =~ /^#|^\s+#/);
			my $comment_index = index($line, "#");
			if($comment_index >= 0){
				$line = substr($line, 0, $comment_index);
			}
			my $is_skip_media_streams = ($line =~ /SkipMediaStreams/);
			
			# regex that catches all MIME types with the config file format, e.g., +application\/ogg.
			my @matches = ($line =~ /[\+-]\w[-!#\$&^+.\w]{0,126}\\\/\w[-!#\$&^+.\w]{0,126}/g);
			if(@matches){
				for my $match(@matches){
					
					# Transform the matched MIME type to the standard format by removing the leading +/- and replacing "\/" by "/"
					my $res = substr($match, 1);
					$res =~ s/\\\//\//;
					
					$mime_types{$res} = 1;
					if($is_skip_media_streams){
						$mime_types{$res} = 0;
					}
				}
			}
		}
		close($fh);
	}
	return %mime_types;
}

# from_policy retrieves the MIME types from the policy files, i.e., squid/antimalware/policy and squid/antimalware/mediatypefilter/policy.<GROUP>
# It also indicates if the SkipMediaStreams is on or off.
# It takes as argument the scope.
# It returns a boolean that indicates if SkipMediaStreams is on or off and the list of MIME types found in the policy files.
sub from_policy {
	my $scope = shift;
	my $dir_name = "$VAULT_PATH/$scope";
	my @policy_files = ("$dir_name/squid/antimalware/policy");
	push @policy_files, <"$dir_name/squid/antimalware/mediatypefilter/policy.*">;
	my $skip_media_streams_on = 0;

	my %mime_types;
	for my $policy_file(@policy_files){
		
		next if(! -f $policy_file);
		my $fh; open($fh, "<", $policy_file) or die $!;
		
		while(my $line = <$fh>){
			# remove comments
			next if($line =~ /^#|^\s+#/);
			my $comment_index = index($line, "#");
			if($comment_index >= 0){
				$line = substr($line, 0, $comment_index);
			}
			# regex that catches all MIME types
			my @matches = ($line =~ /\w[-!#\$&^+.\w]{0,126}\/\w[-!#\$&^+.\w]{0,126}/g);
			
			if(@matches){
				for my $match(@matches){
					$mime_types{$match} = 1;
				}
			}elsif($line =~ /skip_media_streams\s+1/){
				$skip_media_streams_on = 1;
			}
		}
		close($fh);
	}

	return ($skip_media_streams_on, keys %mime_types);
}

sub main {
	my $company_id = $ARGV[0];
	if(! $company_id || ! ($company_id =~ /^\d+$/)){
		die "usage: get-mime <company-id>";
	}
	my $skip_media_streams_on = 0;
	my @scopes = ("default", "company/$company_id");
	my %mimes;
	my %media_streams_mimes;
	
	for my $scope(@scopes){

		# Get the MIME types from config files
		my %mime_types_conf= from_config($scope);
		for my $mime(keys %mime_types_conf){
			if($mime_types_conf{$mime}){
				$mimes{$mime} = 1;
			}else{
				$media_streams_mimes{$mime} = 1;
			}
		}

		# Get the MIME types from policy files and wether or not SkipMediaStreams is on
		my ($skip, @mime_types_policy) = from_policy($scope);
		$skip_media_streams_on = ($skip_media_streams_on || $skip);
		for my $mime(@mime_types_policy){
			$mimes{$mime} = 1;
		}
	}

	# print the MIME types
	for my $mime(keys %mimes){
		print "$mime\n";
	}

	if($skip_media_streams_on){
		for my $mime(keys %media_streams_mimes){
			print "$mime\n";
		}
	}


}

main();



